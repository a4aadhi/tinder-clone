{"version":3,"sources":["Header.js","axios.js","TinderCards.js","SwipeButtons.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","IconButton","fontSize","label","src","alt","instance","axios","create","baseURL","TinderCards","useState","people","setPeople","useEffect","a","get","req","data","fetchData","console","log","map","person","preventSwipe","onSwipe","dir","nameToDelete","name","onCardLeftScreen","style","backgroundImage","imgUrl","SwipeButtons","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8UAuBeA,MAlBf,WACI,OACI,sBAAKC,UAAU,SAAf,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAYC,SAAS,QAAQF,UAAU,mBAEvC,qBAAKG,MAAM,eAAeC,IAAI,+EAA+EC,IAAI,KACrH,cAACJ,EAAA,EAAD,UACA,cAAC,IAAD,CAAWC,SAAS,QAAQF,UAAU,uB,kECTnCM,E,OAHEC,EAAMC,OAAO,CAC1BC,QAAQ,2CCmDGC,MAhDf,WAAwB,IAAD,EACQC,mBAAS,IADjB,mBACZC,EADY,KACLC,EADK,KAqBnB,OAnBAC,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEACqBR,EAAMS,IAAI,iBAD/B,OACUC,EADV,OAEIJ,EAAUI,EAAIC,MAFlB,4CADY,uBAAC,WAAD,wBAKZC,KACD,IACHC,QAAQC,IAAIT,GAaR,qBAAKZ,UAAU,cAAf,SACI,qBAAKA,UAAU,6BAAf,SACCY,EAAOU,KAAI,SAACC,GAAD,OACb,cAAC,IAAD,CACAvB,UAAU,QAETwB,aAAc,CAAC,KAAK,QACpBC,QAAS,SAACC,GAAD,OAlBSC,EAkBUJ,EAAOK,UAjB3CR,QAAQC,IAAI,WAAYM,GADT,IAAWA,GAmBlBE,iBAAkB,kBAfND,EAesBL,EAAOK,UAd7CR,QAAQC,IAAIO,EAAO,mBADJ,IAACA,GAUb,SAMK,qBAAKE,MAAO,CAACC,gBAAgB,OAAD,OAAQR,EAAOS,OAAf,MAC5BhC,UAAU,OADV,SAGI,6BAAKuB,EAAOK,UAPfL,EAAOK,c,6FCATK,MAvBf,WACI,OACI,sBAAKjC,UAAU,eAAf,UACI,cAACC,EAAA,EAAD,CAAaD,UAAU,uBAAvB,SACI,cAAC,IAAD,CAAYE,SAAW,YAE3B,cAACD,EAAA,EAAD,CAAaD,UAAU,qBAAvB,SACI,cAAC,IAAD,CAAWE,SAAW,YAE1B,cAACD,EAAA,EAAD,CAAaD,UAAU,qBAAvB,SACI,cAAC,IAAD,CAAcE,SAAW,YAE7B,cAACD,EAAA,EAAD,CAAaD,UAAU,sBAAvB,SACI,cAAC,IAAD,CAAcE,SAAW,YAE7B,cAACD,EAAA,EAAD,CAAaD,UAAU,0BAAvB,SACI,cAAC,IAAD,CAAaE,SAAW,gBCHzBgC,MAhBf,WACE,OACE,sBAAKlC,UAAU,MAAf,UAGE,cAAC,EAAD,IAIA,cAAC,EAAD,IAEA,cAAC,EAAD,QCLSmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d428fe20.chunk.js","sourcesContent":["import React from \"react\";\r\nimport  \"./Header.css\";\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nfunction Header(){\r\n    return(\r\n        <div className=\"header\">\r\n            <IconButton>\r\n                <PersonIcon fontSize=\"large\" className=\"header__icon\"/>\r\n             </IconButton>\r\n                <img label=\"header__logo\" src=\"https://logos-world.net/wp-content/uploads/2020/09/Tinder-Emblem-700x394.png\" alt=\"\"/>\r\n            <IconButton>\r\n            <ForumIcon fontSize=\"large\" className=\"header__icon\"/>\r\n            </IconButton>\r\n             \r\n            \r\n                \r\n\r\n        </div>\r\n    );\r\n    \r\n}\r\nexport default Header;\r\n","import axios from 'axios'\r\nconst instance = axios.create({\r\n    baseURL:'https://my-tinder-clone.herokuapp.com/'\r\n})\r\nexport default instance;","import React, { useState,useEffect } from \"react\";\r\nimport TinderCard from 'react-tinder-card'\r\nimport \"./TinderCards.css\";\r\nimport axios from './axios'\r\n\r\nfunction TinderCards() {\r\n    const [people,setPeople] = useState([]);\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const req =await axios.get('/tinder/cards');\r\n            setPeople(req.data);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n    console.log(people)\r\n\r\n    const swiped = (direction,nameToDelete) =>{\r\n    console.log(\"removing\"+ nameToDelete);\r\n    //setLastDirection(direction);\r\n    };\r\n    const outOfFrame = (name) =>{\r\n        console.log(name + \"left the screen\")\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"TinderCards\">\r\n            <div className=\"tinderCards__cardcontainer\">\r\n            {people.map((person)=>(\r\n           <TinderCard\r\n           className=\"swipe\"\r\n            key={person.name}\r\n            preventSwipe={[\"up\",\"down\"]}\r\n            onSwipe={(dir) =>swiped(dir,person.name)}\r\n            onCardLeftScreen={()=> outOfFrame(person.name)}>\r\n                <div style={{backgroundImage:`url(${person.imgUrl})`}}\r\n                className=\"card\"\r\n                >\r\n                    <h3>{person.name}</h3>\r\n                    \r\n                </div>\r\n\r\n           </TinderCard>\r\n            ))}\r\n            \r\n            </div>\r\n      \r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default TinderCards\r\n","import React from 'react';\r\nimport \"./SwipeButtons.css\";\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport StarRateIcon from '@material-ui/icons/StarRate';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nfunction SwipeButtons() {\r\n    return (\r\n        <div className=\"swipeButtons\">\r\n            <IconButton  className=\"swipeButtons__repeat\">\r\n                <ReplayIcon fontSize = \"large\"/>\r\n            </IconButton>\r\n            <IconButton  className=\"swipeButtons__left\">\r\n                <CloseIcon fontSize = \"large\"/>\r\n            </IconButton>\r\n            <IconButton  className=\"swipeButtons__star\">\r\n                <StarRateIcon fontSize = \"large\"/>\r\n            </IconButton>\r\n            <IconButton  className=\"swipeButtons__right\">\r\n                <FavoriteIcon fontSize = \"large\"/>\r\n            </IconButton>\r\n            <IconButton  className=\"swipeButtons__lightning\">\r\n                <FlashOnIcon fontSize = \"large\"/>\r\n            </IconButton>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SwipeButtons;\r\n","import react from \"react\";\nimport './App.css';\nimport Header from \"./Header\";\nimport TinderCards from \"./TinderCards\";\nimport SwipeButtons from \"./SwipeButtons\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n   \n      {/*header*/}\n      <Header/>\n      \n\n      {/*tindercard*/}\n      <TinderCards/>\n      {/*swipebuttons*/}\n      <SwipeButtons/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}